# This is a basic workflow to help you get started with Actions

name: ZenChair CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test_and_lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r project/requirements.txt

      # Run linter
      - name: Analyze with pylint
      run: |
        find . -name '*.py' -exec pylint {} \;

      - name: Run unit tests
        run: |
          cd project
          python tests/test_basic.py

      # Run bandit
      - name: Run bandit
        uses: tj-actions/bandit@v4.1
        with:
          version: "1.7.0"
          # targets: |  # or a single string "." 
          #   test_package
          options: "-r"

  docker_build:
    runs-on: ubuntu-latest
    needs: test_and_lint
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # -
        # name: Login to DockerHub
        # uses: docker/login-action@v1 
        # with:
        #   username: ${{ secrets.DOCKERHUB_USERNAME }}
        #   password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: user/app:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

